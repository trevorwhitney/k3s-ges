apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    name: ge-metrics
  name: ge-metrics
  namespace: gem
spec:
  replicas: 3
  selector:
    matchLabels:
      name: ge-metrics
  serviceName: ge-metrics
  template:
    metadata:
      labels:
        name: ge-metrics
    spec:
      containers:
        - args:
            - -config.file=/etc/ge-metrics/config.yaml
          image: us.gcr.io/kubernetes-dev/metrics-enterprise:master-670f4d07
          imagePullPolicy: IfNotPresent
          name: metrics-enterprise
          ports:
            - containerPort: 80
              name: http-metrics
            - containerPort: 9095
              name: grpc
            - containerPort: 7946
              name: gossip
          readinessProbe:
            httpGet:
              path: /ready
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 1
          resources:
            requests:
              cpu: "2"
              memory: 4Gi
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /etc/ge-metrics
              name: ge-metrics-config
            - mountPath: /etc/ge-metrics/license
              name: ge-metrics-license
      imagePullSecrets:
        - name: gcr
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 300
      volumes:
        - name: ge-metrics-config
          configMap:
            name: ge-metrics-config
        - name: ge-metrics-license
          secret:
            secretName: ge-metrics-license
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi